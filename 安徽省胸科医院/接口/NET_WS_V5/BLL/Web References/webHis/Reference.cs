//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// 此源代码是由 Microsoft.VSDesigner 4.0.30319.42000 版自动生成。
// 
#pragma warning disable 1591

namespace BLL.webHis {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="AnInterfaceSoap", Namespace="http://tempuri.org")]
    public partial class AnInterface : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback GetDeptDictOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetHisUsersOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetInICUPatientInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetInPatientInforOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLabTestResultOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetOperationScheduleOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetOperationScheduleNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetOutPatientMasterIndexOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPatientLabTestMasterOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPatientMasterIndexOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPatientOrderOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateOperOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateOperStatusOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public AnInterface() {
            this.Url = global::BLL.Properties.Settings.Default.BLL_webHis_AnInterface;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GetDeptDictCompletedEventHandler GetDeptDictCompleted;
        
        /// <remarks/>
        public event GetHisUsersCompletedEventHandler GetHisUsersCompleted;
        
        /// <remarks/>
        public event GetInICUPatientInfoCompletedEventHandler GetInICUPatientInfoCompleted;
        
        /// <remarks/>
        public event GetInPatientInforCompletedEventHandler GetInPatientInforCompleted;
        
        /// <remarks/>
        public event GetLabTestResultCompletedEventHandler GetLabTestResultCompleted;
        
        /// <remarks/>
        public event GetOperationScheduleCompletedEventHandler GetOperationScheduleCompleted;
        
        /// <remarks/>
        public event GetOperationScheduleNameCompletedEventHandler GetOperationScheduleNameCompleted;
        
        /// <remarks/>
        public event GetOutPatientMasterIndexCompletedEventHandler GetOutPatientMasterIndexCompleted;
        
        /// <remarks/>
        public event GetPatientLabTestMasterCompletedEventHandler GetPatientLabTestMasterCompleted;
        
        /// <remarks/>
        public event GetPatientMasterIndexCompletedEventHandler GetPatientMasterIndexCompleted;
        
        /// <remarks/>
        public event GetPatientOrderCompletedEventHandler GetPatientOrderCompleted;
        
        /// <remarks/>
        public event UpdateOperCompletedEventHandler UpdateOperCompleted;
        
        /// <remarks/>
        public event UpdateOperStatusCompletedEventHandler UpdateOperStatusCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/web.DHCICUSystemInterface.GetDeptDict", RequestNamespace="http://tempuri.org", ResponseNamespace="http://tempuri.org", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetDeptDict(string inPut) {
            object[] results = this.Invoke("GetDeptDict", new object[] {
                        inPut});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetDeptDictAsync(string inPut) {
            this.GetDeptDictAsync(inPut, null);
        }
        
        /// <remarks/>
        public void GetDeptDictAsync(string inPut, object userState) {
            if ((this.GetDeptDictOperationCompleted == null)) {
                this.GetDeptDictOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDeptDictOperationCompleted);
            }
            this.InvokeAsync("GetDeptDict", new object[] {
                        inPut}, this.GetDeptDictOperationCompleted, userState);
        }
        
        private void OnGetDeptDictOperationCompleted(object arg) {
            if ((this.GetDeptDictCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDeptDictCompleted(this, new GetDeptDictCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/web.DHCICUSystemInterface.GetHisUsers", RequestNamespace="http://tempuri.org", ResponseNamespace="http://tempuri.org", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetHisUsers(string inPut) {
            object[] results = this.Invoke("GetHisUsers", new object[] {
                        inPut});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetHisUsersAsync(string inPut) {
            this.GetHisUsersAsync(inPut, null);
        }
        
        /// <remarks/>
        public void GetHisUsersAsync(string inPut, object userState) {
            if ((this.GetHisUsersOperationCompleted == null)) {
                this.GetHisUsersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetHisUsersOperationCompleted);
            }
            this.InvokeAsync("GetHisUsers", new object[] {
                        inPut}, this.GetHisUsersOperationCompleted, userState);
        }
        
        private void OnGetHisUsersOperationCompleted(object arg) {
            if ((this.GetHisUsersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetHisUsersCompleted(this, new GetHisUsersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/web.DHCICUSystemInterface.GetInICUPatientInfo", RequestNamespace="http://tempuri.org", ResponseNamespace="http://tempuri.org", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetInICUPatientInfo(string inPut) {
            object[] results = this.Invoke("GetInICUPatientInfo", new object[] {
                        inPut});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetInICUPatientInfoAsync(string inPut) {
            this.GetInICUPatientInfoAsync(inPut, null);
        }
        
        /// <remarks/>
        public void GetInICUPatientInfoAsync(string inPut, object userState) {
            if ((this.GetInICUPatientInfoOperationCompleted == null)) {
                this.GetInICUPatientInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetInICUPatientInfoOperationCompleted);
            }
            this.InvokeAsync("GetInICUPatientInfo", new object[] {
                        inPut}, this.GetInICUPatientInfoOperationCompleted, userState);
        }
        
        private void OnGetInICUPatientInfoOperationCompleted(object arg) {
            if ((this.GetInICUPatientInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetInICUPatientInfoCompleted(this, new GetInICUPatientInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/web.DHCICUSystemInterface.GetInPatientInfor", RequestNamespace="http://tempuri.org", ResponseNamespace="http://tempuri.org", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetInPatientInfor(string VisitID) {
            object[] results = this.Invoke("GetInPatientInfor", new object[] {
                        VisitID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetInPatientInforAsync(string VisitID) {
            this.GetInPatientInforAsync(VisitID, null);
        }
        
        /// <remarks/>
        public void GetInPatientInforAsync(string VisitID, object userState) {
            if ((this.GetInPatientInforOperationCompleted == null)) {
                this.GetInPatientInforOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetInPatientInforOperationCompleted);
            }
            this.InvokeAsync("GetInPatientInfor", new object[] {
                        VisitID}, this.GetInPatientInforOperationCompleted, userState);
        }
        
        private void OnGetInPatientInforOperationCompleted(object arg) {
            if ((this.GetInPatientInforCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetInPatientInforCompleted(this, new GetInPatientInforCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/web.DHCICUSystemInterface.GetLabTestResult", RequestNamespace="http://tempuri.org", ResponseNamespace="http://tempuri.org", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetLabTestResult(string inPut) {
            object[] results = this.Invoke("GetLabTestResult", new object[] {
                        inPut});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetLabTestResultAsync(string inPut) {
            this.GetLabTestResultAsync(inPut, null);
        }
        
        /// <remarks/>
        public void GetLabTestResultAsync(string inPut, object userState) {
            if ((this.GetLabTestResultOperationCompleted == null)) {
                this.GetLabTestResultOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLabTestResultOperationCompleted);
            }
            this.InvokeAsync("GetLabTestResult", new object[] {
                        inPut}, this.GetLabTestResultOperationCompleted, userState);
        }
        
        private void OnGetLabTestResultOperationCompleted(object arg) {
            if ((this.GetLabTestResultCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLabTestResultCompleted(this, new GetLabTestResultCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/web.DHCICUSystemInterface.GetOperationSchedule", RequestNamespace="http://tempuri.org", ResponseNamespace="http://tempuri.org", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetOperationSchedule(string ScheduleDateStart, string ScheduleDateStop, string PerformedCode, string OperStatus) {
            object[] results = this.Invoke("GetOperationSchedule", new object[] {
                        ScheduleDateStart,
                        ScheduleDateStop,
                        PerformedCode,
                        OperStatus});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetOperationScheduleAsync(string ScheduleDateStart, string ScheduleDateStop, string PerformedCode, string OperStatus) {
            this.GetOperationScheduleAsync(ScheduleDateStart, ScheduleDateStop, PerformedCode, OperStatus, null);
        }
        
        /// <remarks/>
        public void GetOperationScheduleAsync(string ScheduleDateStart, string ScheduleDateStop, string PerformedCode, string OperStatus, object userState) {
            if ((this.GetOperationScheduleOperationCompleted == null)) {
                this.GetOperationScheduleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOperationScheduleOperationCompleted);
            }
            this.InvokeAsync("GetOperationSchedule", new object[] {
                        ScheduleDateStart,
                        ScheduleDateStop,
                        PerformedCode,
                        OperStatus}, this.GetOperationScheduleOperationCompleted, userState);
        }
        
        private void OnGetOperationScheduleOperationCompleted(object arg) {
            if ((this.GetOperationScheduleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetOperationScheduleCompleted(this, new GetOperationScheduleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/web.DHCICUSystemInterface.GetOperationScheduleName", RequestNamespace="http://tempuri.org", ResponseNamespace="http://tempuri.org", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetOperationScheduleName(string ScheduleID) {
            object[] results = this.Invoke("GetOperationScheduleName", new object[] {
                        ScheduleID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetOperationScheduleNameAsync(string ScheduleID) {
            this.GetOperationScheduleNameAsync(ScheduleID, null);
        }
        
        /// <remarks/>
        public void GetOperationScheduleNameAsync(string ScheduleID, object userState) {
            if ((this.GetOperationScheduleNameOperationCompleted == null)) {
                this.GetOperationScheduleNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOperationScheduleNameOperationCompleted);
            }
            this.InvokeAsync("GetOperationScheduleName", new object[] {
                        ScheduleID}, this.GetOperationScheduleNameOperationCompleted, userState);
        }
        
        private void OnGetOperationScheduleNameOperationCompleted(object arg) {
            if ((this.GetOperationScheduleNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetOperationScheduleNameCompleted(this, new GetOperationScheduleNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/web.DHCICUSystemInterface.GetOutPatientMasterIndex", RequestNamespace="http://tempuri.org", ResponseNamespace="http://tempuri.org", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetOutPatientMasterIndex(string PatientID) {
            object[] results = this.Invoke("GetOutPatientMasterIndex", new object[] {
                        PatientID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetOutPatientMasterIndexAsync(string PatientID) {
            this.GetOutPatientMasterIndexAsync(PatientID, null);
        }
        
        /// <remarks/>
        public void GetOutPatientMasterIndexAsync(string PatientID, object userState) {
            if ((this.GetOutPatientMasterIndexOperationCompleted == null)) {
                this.GetOutPatientMasterIndexOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOutPatientMasterIndexOperationCompleted);
            }
            this.InvokeAsync("GetOutPatientMasterIndex", new object[] {
                        PatientID}, this.GetOutPatientMasterIndexOperationCompleted, userState);
        }
        
        private void OnGetOutPatientMasterIndexOperationCompleted(object arg) {
            if ((this.GetOutPatientMasterIndexCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetOutPatientMasterIndexCompleted(this, new GetOutPatientMasterIndexCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/web.DHCICUSystemInterface.GetPatientLabTestMaster", RequestNamespace="http://tempuri.org", ResponseNamespace="http://tempuri.org", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetPatientLabTestMaster(string inPut) {
            object[] results = this.Invoke("GetPatientLabTestMaster", new object[] {
                        inPut});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetPatientLabTestMasterAsync(string inPut) {
            this.GetPatientLabTestMasterAsync(inPut, null);
        }
        
        /// <remarks/>
        public void GetPatientLabTestMasterAsync(string inPut, object userState) {
            if ((this.GetPatientLabTestMasterOperationCompleted == null)) {
                this.GetPatientLabTestMasterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPatientLabTestMasterOperationCompleted);
            }
            this.InvokeAsync("GetPatientLabTestMaster", new object[] {
                        inPut}, this.GetPatientLabTestMasterOperationCompleted, userState);
        }
        
        private void OnGetPatientLabTestMasterOperationCompleted(object arg) {
            if ((this.GetPatientLabTestMasterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPatientLabTestMasterCompleted(this, new GetPatientLabTestMasterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/web.DHCICUSystemInterface.GetPatientMasterIndex", RequestNamespace="http://tempuri.org", ResponseNamespace="http://tempuri.org", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetPatientMasterIndex(string PatientID) {
            object[] results = this.Invoke("GetPatientMasterIndex", new object[] {
                        PatientID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetPatientMasterIndexAsync(string PatientID) {
            this.GetPatientMasterIndexAsync(PatientID, null);
        }
        
        /// <remarks/>
        public void GetPatientMasterIndexAsync(string PatientID, object userState) {
            if ((this.GetPatientMasterIndexOperationCompleted == null)) {
                this.GetPatientMasterIndexOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPatientMasterIndexOperationCompleted);
            }
            this.InvokeAsync("GetPatientMasterIndex", new object[] {
                        PatientID}, this.GetPatientMasterIndexOperationCompleted, userState);
        }
        
        private void OnGetPatientMasterIndexOperationCompleted(object arg) {
            if ((this.GetPatientMasterIndexCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPatientMasterIndexCompleted(this, new GetPatientMasterIndexCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/web.DHCICUSystemInterface.GetPatientOrder", RequestNamespace="http://tempuri.org", ResponseNamespace="http://tempuri.org", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetPatientOrder(string inPut) {
            object[] results = this.Invoke("GetPatientOrder", new object[] {
                        inPut});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetPatientOrderAsync(string inPut) {
            this.GetPatientOrderAsync(inPut, null);
        }
        
        /// <remarks/>
        public void GetPatientOrderAsync(string inPut, object userState) {
            if ((this.GetPatientOrderOperationCompleted == null)) {
                this.GetPatientOrderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPatientOrderOperationCompleted);
            }
            this.InvokeAsync("GetPatientOrder", new object[] {
                        inPut}, this.GetPatientOrderOperationCompleted, userState);
        }
        
        private void OnGetPatientOrderOperationCompleted(object arg) {
            if ((this.GetPatientOrderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPatientOrderCompleted(this, new GetPatientOrderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/web.DHCICUSystemInterface.UpdateOper", RequestNamespace="http://tempuri.org", ResponseNamespace="http://tempuri.org", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdateOper(string inPut) {
            object[] results = this.Invoke("UpdateOper", new object[] {
                        inPut});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateOperAsync(string inPut) {
            this.UpdateOperAsync(inPut, null);
        }
        
        /// <remarks/>
        public void UpdateOperAsync(string inPut, object userState) {
            if ((this.UpdateOperOperationCompleted == null)) {
                this.UpdateOperOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateOperOperationCompleted);
            }
            this.InvokeAsync("UpdateOper", new object[] {
                        inPut}, this.UpdateOperOperationCompleted, userState);
        }
        
        private void OnUpdateOperOperationCompleted(object arg) {
            if ((this.UpdateOperCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateOperCompleted(this, new UpdateOperCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/web.DHCICUSystemInterface.UpdateOperStatus", RequestNamespace="http://tempuri.org", ResponseNamespace="http://tempuri.org", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdateOperStatus(string ScheduleID, string OperStatus) {
            object[] results = this.Invoke("UpdateOperStatus", new object[] {
                        ScheduleID,
                        OperStatus});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateOperStatusAsync(string ScheduleID, string OperStatus) {
            this.UpdateOperStatusAsync(ScheduleID, OperStatus, null);
        }
        
        /// <remarks/>
        public void UpdateOperStatusAsync(string ScheduleID, string OperStatus, object userState) {
            if ((this.UpdateOperStatusOperationCompleted == null)) {
                this.UpdateOperStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateOperStatusOperationCompleted);
            }
            this.InvokeAsync("UpdateOperStatus", new object[] {
                        ScheduleID,
                        OperStatus}, this.UpdateOperStatusOperationCompleted, userState);
        }
        
        private void OnUpdateOperStatusOperationCompleted(object arg) {
            if ((this.UpdateOperStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateOperStatusCompleted(this, new UpdateOperStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void GetDeptDictCompletedEventHandler(object sender, GetDeptDictCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDeptDictCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDeptDictCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void GetHisUsersCompletedEventHandler(object sender, GetHisUsersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetHisUsersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetHisUsersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void GetInICUPatientInfoCompletedEventHandler(object sender, GetInICUPatientInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetInICUPatientInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetInICUPatientInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void GetInPatientInforCompletedEventHandler(object sender, GetInPatientInforCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetInPatientInforCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetInPatientInforCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void GetLabTestResultCompletedEventHandler(object sender, GetLabTestResultCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLabTestResultCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLabTestResultCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void GetOperationScheduleCompletedEventHandler(object sender, GetOperationScheduleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetOperationScheduleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetOperationScheduleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void GetOperationScheduleNameCompletedEventHandler(object sender, GetOperationScheduleNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetOperationScheduleNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetOperationScheduleNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void GetOutPatientMasterIndexCompletedEventHandler(object sender, GetOutPatientMasterIndexCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetOutPatientMasterIndexCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetOutPatientMasterIndexCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void GetPatientLabTestMasterCompletedEventHandler(object sender, GetPatientLabTestMasterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPatientLabTestMasterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPatientLabTestMasterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void GetPatientMasterIndexCompletedEventHandler(object sender, GetPatientMasterIndexCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPatientMasterIndexCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPatientMasterIndexCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void GetPatientOrderCompletedEventHandler(object sender, GetPatientOrderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPatientOrderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPatientOrderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void UpdateOperCompletedEventHandler(object sender, UpdateOperCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateOperCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateOperCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void UpdateOperStatusCompletedEventHandler(object sender, UpdateOperStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateOperStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateOperStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591