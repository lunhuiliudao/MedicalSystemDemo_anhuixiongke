CREATE OR REPLACE VIEW VIEW_DEPT_GONGZUOLIANG AS
WITH MAINVIEW AS
(
    SELECT USER_ID, A.USER_NAME, OPER_TYPE, ANES_METHOD, OPER_SCALE, OPER_COUNT, B.DEPT_CODE, B.DEPT_NAME, START_DATE_TIME FROM
    (
      SELECT USER_ID, OPER_TYPE, ANES_METHOD, OPER_SCALE, SUM(OPER_COUNT) AS OPER_COUNT, START_DATE_TIME FROM
      (
        SELECT M.SURGEON,
               M.FIRST_OPER_ASSISTANT,
               M.SECOND_OPER_ASSISTANT,
               M.OPER_SCALE,
               CASE
                 WHEN ANES_METHOD = '全身麻醉' THEN
                  '全麻'
                 ELSE
                  '其他'
               END ANES_METHOD,
               COUNT(*) AS OPER_COUNT, TO_CHAR(M.START_DATE_TIME, 'YYYY-MM') as START_DATE_TIME
        FROM MED_OPERATION_MASTER M
        WHERE M.OPER_STATUS_CODE >= 35 --AND TO_CHAR(M.START_DATE_TIME, 'YYYY-MM')='2020-02'
        AND (M.SURGEON IS NOT NULL OR M.FIRST_OPER_ASSISTANT IS NOT NULL OR M.SECOND_OPER_ASSISTANT IS NOT NULL)
        GROUP BY M.SURGEON, M.FIRST_OPER_ASSISTANT, M.SECOND_OPER_ASSISTANT,  M.OPER_SCALE, M.ANES_METHOD, TO_CHAR(M.START_DATE_TIME, 'YYYY-MM')
      )
      UNPIVOT(USER_ID FOR OPER_TYPE IN(SURGEON, FIRST_OPER_ASSISTANT, SECOND_OPER_ASSISTANT))
      GROUP BY USER_ID, OPER_TYPE, ANES_METHOD, OPER_SCALE, START_DATE_TIME
    )
    LEFT JOIN MED_HIS_USERS A ON USER_ID=A.USER_JOB_ID
    LEFT JOIN MED_DEPT_DICT B ON A.USER_DEPT_CODE=B.DEPT_CODE
)

SELECT START_DATE_TIME, DEPT_CODE, DEPT_NAME, USER_ID, USER_NAME,
       SUM(FIRST_SCALE) AS FIRST_SCALE,
       SUM(SECOND_SCALE) AS SECOND_SCALE,
       SUM(THIRD_SCALE) AS THIRD_SCALE,
       SUM(FOURTH_SCALE) AS FOURTH_SCALE,
       SUM(OTHER_SCALE) AS OTHER_SCALE,
       SUM(ALL_SCALE) AS ALL_SCALE,
       SUM(SURGEON) AS SURGEON,
       SUM(FIRST_ASS) AS FIRST_ASS,
       SUM(TWO_ASS) AS TWO_ASS,
       SUM(QUAN_MA) AS QUAN_MA,
       SUM(OTERH_MA) AS OTERH_MA
FROM
(
    SELECT START_DATE_TIME, DEPT_CODE, DEPT_NAME, USER_ID, USER_NAME,
           0 AS FIRST_SCALE,
           0 AS SECOND_SCALE,
           0 AS THIRD_SCALE,
           0 AS FOURTH_SCALE,
           0 AS OTHER_SCALE,
           0 AS ALL_SCALE,
           SUM(NVL(SURGEON, 0)) AS SURGEON,
           SUM(NVL(FIRST_ASS, 0)) AS FIRST_ASS,
           SUM(NVL(TWO_ASS, 0)) AS TWO_ASS,
           0 AS QUAN_MA,
           0 AS OTERH_MA

    FROM MAINVIEW
    PIVOT (SUM(OPER_COUNT) FOR OPER_TYPE IN ('SECOND_OPER_ASSISTANT' TWO_ASS, 'FIRST_OPER_ASSISTANT' FIRST_ASS, 'SURGEON' SURGEON))
    GROUP BY START_DATE_TIME, DEPT_CODE, DEPT_NAME, USER_ID, USER_NAME

    UNION ALL

    SELECT START_DATE_TIME, DEPT_CODE, DEPT_NAME, USER_ID, USER_NAME,
          SUM(NVL(FIRST_SCALE, 0)) AS FIRST_SCALE,
          SUM(NVL(SECOND_SCALE, 0)) AS SECOND_SCALE,
          SUM(NVL(THIRD_SCALE, 0)) AS THIRD_SCALE,
          SUM(NVL(FOURTH_SCALE, 0)) AS FOURTH_SCALE,
          SUM(NVL(OTHER_SCALE, 0)) AS OTHER_SCALE,
          (SUM(NVL(FIRST_SCALE, 0)) + SUM(NVL(SECOND_SCALE, 0)) + SUM(NVL(THIRD_SCALE, 0)) + SUM(NVL(FOURTH_SCALE, 0)) + SUM(NVL(OTHER_SCALE, 0))) AS ALL_SCALE,
          0 AS SURGEON,
          0 AS FIRST_ASS,
          0 AS TWO_ASS,
          0 AS QUAN_MA,
          0 AS OTERH_MA
    FROM MAINVIEW
    PIVOT (SUM(OPER_COUNT) FOR OPER_SCALE IN ('1' FIRST_SCALE, '2' SECOND_SCALE, '3' THIRD_SCALE, '4' FOURTH_SCALE, '' OTHER_SCALE))
    GROUP BY START_DATE_TIME, DEPT_CODE, DEPT_NAME, USER_ID, USER_NAME

    UNION ALL

    SELECT START_DATE_TIME, DEPT_CODE,
           DEPT_NAME,
           USER_ID,
           USER_NAME,
           0 AS FIRST_SCALE,
           0 AS SECOND_SCALE,
           0 AS THIRD_SCALE,
           0 AS FOURTH_SCALE,
           0 AS OTHER_SCALE,
           0 AS ALL_SCALE,
           0 AS SURGEON,
           0 AS FIRST_ASS,
           0 AS TWO_ASS,
           SUM(NVL(QUAN_MA, 0)) AS QUAN_MA,
           SUM(NVL(OTERH_MA, 0)) AS OTERH_MA
    FROM MAINVIEW
    PIVOT (SUM(OPER_COUNT) FOR ANES_METHOD IN ('其他' OTERH_MA, '全麻' QUAN_MA))
    GROUP BY START_DATE_TIME, DEPT_CODE, DEPT_NAME, USER_ID, USER_NAME
)

WHERE 1=1
--AND  (DEPT_NAME LIKE '%' || '202030' || '%' OR DEPT_CODE LIKE '%' || '202030' || '%' OR '202030' IS NULL)
GROUP BY START_DATE_TIME, DEPT_NAME, DEPT_CODE, USER_ID, USER_NAME
having sum(surgeon) > 0
ORDER BY DEPT_NAME
;
